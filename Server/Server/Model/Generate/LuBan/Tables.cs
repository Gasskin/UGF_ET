
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Threading.Tasks;

namespace cfg
{
public partial class Tables
{
    public StartMachineTable StartMachineTable {get;private set;}
    public StartProcessTable StartProcessTable {get;private set;}
    public StartSceneTable StartSceneTable {get;private set;}
    public StartZoneTable StartZoneTable {get;private set;}

    public Tables() { }

    public async Task LoadAsync(System.Func<string, Task<ByteBuf>> loader)
    {
        StartMachineTable = new StartMachineTable(await loader("startmachinetable"));
        StartProcessTable = new StartProcessTable(await loader("startprocesstable"));
        StartSceneTable = new StartSceneTable(await loader("startscenetable"));
        StartZoneTable = new StartZoneTable(await loader("startzonetable"));
        ResolveRef();
        SetInstance();
    }
    
    private void ResolveRef()
    {
        StartMachineTable.ResolveRef(this);
        StartProcessTable.ResolveRef(this);
        StartSceneTable.ResolveRef(this);
        StartZoneTable.ResolveRef(this);
    }

    private void SetInstance()
    {
        StartMachineTable.SetInstance();
        StartProcessTable.SetInstance();
        StartSceneTable.SetInstance();
        StartZoneTable.SetInstance();
    }

    partial void OnInit();
}

}
